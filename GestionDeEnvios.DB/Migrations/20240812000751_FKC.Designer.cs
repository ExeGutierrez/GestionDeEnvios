// <auto-generated />
using System;
using GestionDeEnvios.DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDeEnvios.DB.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240812000751_FKC")]
    partial class FKC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PresupuestoId")
                        .HasColumnType("int");

                    b.Property<int?>("ServRepId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PresupuestoId");

                    b.HasIndex("ServRepId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PagoID")
                        .HasColumnType("int");

                    b.Property<int>("ServRep")
                        .HasColumnType("int");

                    b.Property<int>("ServRepsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServRepsId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("PresupuestoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.ToTable("presupuestos");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Rendimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efectividad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaGeneracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("InformeID")
                        .HasColumnType("int");

                    b.Property<int>("ServRepID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServRepID");

                    b.ToTable("rendimientos");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.ServRep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efectividad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RendimientoId")
                        .HasColumnType("int");

                    b.Property<int>("ServRepID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.HasIndex("RendimientoId");

                    b.ToTable("servReps");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Socio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disponibilidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SocioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("socios");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Cliente", b =>
                {
                    b.HasOne("GestionDeEnvios.DB.Data.Entity.Presupuesto", null)
                        .WithMany("Clientes")
                        .HasForeignKey("PresupuestoId");

                    b.HasOne("GestionDeEnvios.DB.Data.Entity.ServRep", null)
                        .WithMany("Clientes")
                        .HasForeignKey("ServRepId");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Pago", b =>
                {
                    b.HasOne("GestionDeEnvios.DB.Data.Entity.ServRep", "ServReps")
                        .WithMany()
                        .HasForeignKey("ServRepsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServReps");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Presupuesto", b =>
                {
                    b.HasOne("GestionDeEnvios.DB.Data.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Rendimiento", b =>
                {
                    b.HasOne("GestionDeEnvios.DB.Data.Entity.ServRep", "ServRep")
                        .WithMany()
                        .HasForeignKey("ServRepID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServRep");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.ServRep", b =>
                {
                    b.HasOne("GestionDeEnvios.DB.Data.Entity.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionDeEnvios.DB.Data.Entity.Rendimiento", null)
                        .WithMany("ServReps")
                        .HasForeignKey("RendimientoId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Presupuesto", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.Rendimiento", b =>
                {
                    b.Navigation("ServReps");
                });

            modelBuilder.Entity("GestionDeEnvios.DB.Data.Entity.ServRep", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
